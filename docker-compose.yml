version: '3.7'
services:
  postgres:
    image: "postgres"
    volumes:
      - /postgres-data:/var/lib/postgresql/data
      - secret_db_user:/run/secrets/db_user
      - secret_db_password:/run/secrets/db_password
      - secret_db_dbname:/run/secrets/db_dbname      
    environment:
      
      POSTGRES_USER: $(cat /run/secrets/db_user)
      POSTGRES_PASSWORD: $(cat /run/secrets/db_password)
      POSTGRES_DB: $(cat /run/secrets/db_dbname)


#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}

#      POSTGRES_USER: root  
#      POSTGRES_PASSWORD: root
#      POSTGRES_DB: root


#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}

    ports:
      - "5432:5432"


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "gui@alura.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "54321:80"
    depends_on:
      - postgres

#Modelo de chamada build desse docker-compose passando os argumentos
#docker-compose build --build-arg POSTGRES_USER=root --build-arg POSTGRES_PASSWORD=root --build-arg POSTGRES_DB=root
#colocar o comando acima na pipeline
