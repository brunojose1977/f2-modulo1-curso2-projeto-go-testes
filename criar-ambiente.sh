#! /bin/bash
clear
echo " ======================================================================================================================================================================================================================== "
echo " ## Criação completa do ambiente: Conteiners + imagens + aplicação rodando.                                                                                                                                            ## "
echo " ======================================================================================================================================================================================================================== "
echo " "
echo " 1) Abra mais três telas de terminal, 3x CTRL + SHIFT + T "
echo " "
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ "
echo " "
echo " 2) No segundo terminal, para CONSTRUIR os conteiners de PostgreSQL e PGAdmin, "
echo " "
echo " sudo docker-compose up"
echo " "
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ "
echo " "
echo " 3) No terceiro termina, verifique se os conteineres de banco de dados estão Up (em execução)."
echo " "
echo " sudo docker ps -a | grep f2-modulo1-curso2-projeto-go-testes"
echo " "
echo " Algo semelhando ao que é mostrado na tela abaixo:"
echo " "
echo " CONTAINER ID   IMAGE             STATUS                    PORTS                                              NAMES                                                 "
echo " 7670b0521ce0   dpage/pgadmin4    Up 2 minutes              443/tcp, 0.0.0.0:54321->80/tcp, :::54321->80/tcp   f2-modulo1-curso2-projeto-go-testes-pgadmin-compose-1 "
echo " 8c817e0a8ed2   postgres          Up 2 minutes              0.0.0.0:5432->5432/tcp, :::5432->5432/tcp          f2-modulo1-curso2-projeto-go-testes-postgres-1        "
echo " "
echo " Se os dois conteineres estiverem 'Up' então executo o comando para rodar a aplicação GO."
echo " "
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- "
echo " " 
echo " 3) No terceiro terminal, executar a aplicação..."
echo " "
echo " go run main.go"
echo " "
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ "
echo " "
echo " 4) para testar a infraestrutura e a aplicação:"
echo " " 
echo " PGAdmin - Gerenciador do PostGreSQL"
echo " " 
echo " No browser da máquina host digite:  http://0.0.0.0:54321"
echo " "
echo "    Login e-mail: gui@alura.com "
echo "    Senha       : 123456   <--- melhor digitar que copiar, porque algums espaço pode ir junto e acabar gerando erro de senha.  "
echo " "
echo " Será preciso criar e configurar o servidor dentro do PGADMIN para poder monitorar e gerenciar o mesmo."
echo " No quarto terminal, consulte IP do conteiner PostgreSQL."
echo " " 
echo "     sudo docker inspect f2-modulo1-curso2-projeto-go-testes-postgres-1 | grep IPAddress"
echo " " 
echo " Copie esse IP, no PGADmin, no server, clique com o botão direito e selecione properties, então na aba Connections do Banco de dadodos, altere o IP no campo Address."
echo " "
echo " Passo a passo de sexmplo para configurar um novo server no PGadmin:"
echo " -------------------------------------------------------------------"
echo " 1 - Add New Server "
echo " 2 - [Aba General] Nme: Meu servidor"
echo " 3 - [Aba Connection] Host name / address: <COLOQUE AQUI O IO DO CONTEINER POSTGRESQL>" 
echo " 4 - [Aba Connection] Port               : 5432  "
echo " 5 - [Aba Connection] Database           : root "
echo " 6 - [Aba Cpmmecton] Username            : root "
echo " 7 - [aba Connection] Password           : root " 
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
echo " "
echo " Para testar a aplicação: No browser da máquina host digite: http://0.0.0.0:8080/Bruno"
echo " "
echo " ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ "
echo " "
echo " No quarto termina, verifique o situação geral de funcionamento de todo o ambiente: "
echo " "
echo "     ./ver-ambiente.sh "
echo " "
